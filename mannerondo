
---------------------------------------------------------------------------------------------<t_re_in 프로시저>
--t_re 테이블 인서트 프로시저 만들기
--1) 시퀀스 생성
create sequence re_seq
start with 910 ;
--
delete from t_re where t_re_code =10; 
select * from t_re;
drop sequence re_seq;
drop procedure p_re_in;
-----------------------
--2)프로시저생성
create or replace procedure p_re_in
  (
  pb_code number    --게시물번호
  ,pm_code t_re.m_code%type  --회원번호
  ,pt_ev_id  t_re.t_ev_mem_id%type  -- 평가자회원번호
  ,pbig_cate_id number -- 빅카테
  ,pt_re_nae t_re.t_re_nae%type--후기내용
  )
is
--vdate date;
begin
--vdate := sysdate;
  insert into t_re (t_re_code,b_code,m_code,t_ev_mem_id, big_cate_id , t_re_date, t_re_nae )
  values (re_seq.nextval, pb_code,pm_code,pt_ev_id, pbig_cate_id , sysdate, pt_re_nae );
commit;
end;
--회원코드, 카테고리, 제목, 가격, 가격제시여부(1/0), 글내용, 지역범위
--exec p_re_in( 5560 ,1004,1002,1,'이분과는 의사소통이 잘 안되네요');

select * from t_re;
delete from t_re where t_re_code=910;

--------------------------------------------------------------------------------------------<u_re_in  프로시저>
select * from u_re;
--u_re 테이블 인서트 프로시저 만들기
--1) 시퀀스 생성
create sequence re_seq_u
start with 6 ;
--
delete from u_re where u_re_code=6;
drop sequence re_seq_u;
drop procedure u_re_in;
-----------------------
--2)프로시저생성
create or replace procedure u_re_in
  (
  pm_code u_re.m_code%type  --회원번호
  ,pu_re_nae u_re.u_re_nae%type--후기내용
  ,pu_ev_id  u_re.u_ev_mem_id%type  -- 평가자회원번호
  )
is
begin
  insert into u_re (u_re_code,u_re_date, m_code ,u_re_nae,u_ev_mem_id)
  values (re_seq_u.nextval, sysdate,pm_code, pu_re_nae, pu_ev_id);
commit;
end;
--회원코드, 카테고리, 제목, 가격, 가격제시여부(1/0), 글내용, 지역범위
exec u_re_in( 1003, '이사람이랑은 다시는 거래하고싶지 않네요ㅡㅡ ',1004);

select * from u_re;

commit;

---------------------------------------------------------------------------------------------t_detail 인서트되면 control update트리거
CREATE OR REPLACE TRIGGER tri_control_t
    AFTER
    INSERT ON t_detail
    FOR EACH ROW --행 트리거 사용
DECLARE
    vhbmcnt NUMBER;
    vbmcnt NUMBER;
BEGIN
    IF INSERTING THEN
        IF(:new.t_cate_id LIKE '%v' )THEN
            SELECT COUNT(*)
                INTO vhbmcnt
            FROM t_detail
            WHERE m_code = :new.m_code ;
            END IF;
        IF(:new.t_cate_id LIKE '%b%' and :new.t_cate_id  not like '%v' )THEN  
            SELECT COUNT(*)
                INTO vbmcnt
            FROM t_detail
            WHERE m_code = :new.m_code;
           END IF;
        
        UPDATE control
        SET h_bm = vhbmcnt, bm = vbmcnt
        WHERE m_code = :new.m_code;
 END IF;
END;



----------------------------------------------------------------------------

--거래상세평가 버튼 체크체크 하면 insert 되는 프로시저
delete from t_detail where t_detail_code =38;
select * from t_detail;
--
create sequence detail_seq 
start with 38;
--
drop sequence detail_seq;
drop procedure p_detail_in;
--
create or replace procedure p_detail_in
  (
   pm_code t_detail.m_code%type  
  ,ptre_code  t_detail.t_re_code%type  
  ,ptev_id  t_detail.t_ev_mem_id%type  
  ,ptcate_id  t_detail.t_cate_id%type  
  )
is
begin
  insert into t_detail 
  values(detail_seq.nextval, pm_code,ptre_code,sysdate  ,ptev_id  ,ptcate_id );
commit;
end;
--
delete  from control;
select * from control;
-----------------------

exec p_detail_in(1003,909, 1002,'2b6');
select * from t_detail;
--
select * from control;

-------------------------------------------------------------------------------------------------------<이용제재 테이블 쿼리>
desc control;
SELECT * FROM control;
--컬럼 4개만 있으면 바로 프로시저 만들러 아래로...
--컬럼 4개 아니고 더 많이 있으면 아래꺼 쿼리 4개 실행

alter table control drop column h_bm_warn;
alter table control drop column bm_warn ;
alter table control drop column warnsum;
alter table control drop column stop;

------------
desc control;
----쿼리 구조 4개만 남아있는지 확인
delete  from control;
create sequence control_seq;
drop sequence control_seq;
--
drop procedure pro_control;
-----------------------------------------------------------------------------------------------pro_control 
create or replace procedure pro_control
(
pmcode control.m_code%type
)
is
vh_bm_t number;
vh_bm_u number;
vh_bm number;
vbm_t number;
vbm_u number;
vbm number;
begin
--심각비매너계산
select count(*) 
into vh_bm_t from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%v' ;
--
select count(*) 
into vh_bm_u from u_detail where sysdate-u_re_date<365 and m_code=pmcode and u_cate_id like '%v' ;
--
vh_bm :=vh_bm_t + vh_bm_u;
--
--그냥비매너 계산
select count(*)
into vbm_t 
from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%b%' and t_cate_id not like '%v';
--
select count(*)
into vbm_u 
from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%d%' and t_cate_id not like '%v';
--
vbm :=vbm_t+vbm_u;

insert into control (control_id, m_code, h_bm, bm)
values (control_seq.nextval, pmcode, vh_bm, vbm);

end;
---------------------
--프로시저 실행쿼리
declare 
begin
for i in 1000..1005
loop
     pro_control(i);
end loop;
end;
--
select * from control;
delete from 
--
select * from t_detail;
--------------------------------------------------------------------------------------------------------m_ondo_in 매너온도프로시저 

--1)데이터타입 변경해주세요 필수!!! 
--데이터타입 변경안하면 프로시저 안돌아감 ㅠ

desc m_ondo;
-----------------------데이터타입 number(2,1) 로 된것 있으면 아래실행!
alter table m_ondo modify p_tem number(3,1) ;
alter table m_ondo modify m_ondo number(3,1);
--2)시퀀스만들기
create sequence seq_mondo;
drop sequence seq_mondo;
------------------------------------------------------------------------------
--select* from t_detail; 
--DELETE from m_ondo;
--drop procedure m_ondo_in;

--3)매너온도 프로시저생성
create or replace procedure m_ondo_in
(
pmcode m_ondo.m_code%type
)
is
vt_re_s number;
vt_cate_a number;
vt_cate_b number;
vt_cate_s number;
vu_cate_c number;
vu_cate_d number;
vu_cate_s number;
begin
--vt_re_s := (select count(*) from t_re where big_cate_id !=1 and t_re_nae is not null and m_code=pmcode)
select count(*) 
  into vt_re_s
from t_re 
where big_cate_id !=1 and t_re_nae is not null and m_code=pmcode;
--
select count(*) 
  into vt_cate_a
from t_detail where t_cate_id like '%a%' and m_code=pmcode and sysdate-t_re_date<365;
--
select count(*) 
  into vt_cate_b
from t_detail where t_cate_id like '%b%' and m_code=pmcode and sysdate-t_re_date<365;
--
vt_cate_s := vt_cate_a - vt_cate_b;
--
select count(*)
  into vu_cate_c
from u_detail where u_cate_id like '%c%' and m_code=pmcode and sysdate-u_re_date<365;
--
select count(*) 
  into vu_cate_d
from u_detail where u_cate_id like '%d%' and m_code=pmcode and sysdate-u_re_date<365;
--
vu_cate_s := vu_cate_c - vu_cate_d;
---
insert into m_ondo (ondo_code, m_code, p_tem, t_re_s,t_cate_s, u_cate_s)
 values (  seq_mondo.nextval, pmcode, 36.5,vt_re_s, vt_cate_s, vu_cate_s);
commit;
end;
--=================================================================================
--매너온도에 인서트실행하는 쿼리

declare 
begin
for i in 1000..1005
loop
      m_ondo_in(i);
end loop;
end;


--delete from m_ondo;
select * from m_ondo;
--==========================================================================================
--==========================================================================================tri_control_u 트리거 세개합친거
CREATE OR REPLACE TRIGGER tri_control_u
    AFTER
    INSERT OR UPDATE ON t_detail
    FOR EACH ROW --행 트리거 사용
DECLARE
    vhbmcnt NUMBER;
    vbmcnt NUMBER;
BEGIN
    IF INSERTING OR UPDATING THEN
        IF(:new.t_cate_id LIKE '%v%') THEN
            SELECT COUNT(*)
                INTO vhbmcnt
            FROM t_detail
            WHERE t_ev_mem_id = :new.t_ev_mem_id AND t_cate_id LIKE '%v%';
            vhbmcnt := vhbmcnt+1;
        END IF;
        
        IF(:new.t_cate_id LIKE '%b%') THEN
    
            SELECT COUNT(*)
                INTO vbmcnt
            FROM t_detail
            WHERE t_ev_mem_id = :new.t_ev_mem_id AND t_cate_id LIKE '%b%';
            vbmcnt := vbmcnt+1;
        END IF;
        
        UPDATE control
        SET h_bm = vhbmcnt, bm = vbmcnt
        WHERE m_code = :new.t_ev_mem_id;
    END IF;
END;
--==========================================================================================

--칭찬 출력 트리거
--칭찬만 출력됨

CREATE OR REPLACE PROCEDURE get_tmannercnt(
    pmcode NUMBER
)
IS
    vnick VARCHAR2(50);
    vcate VARCHAR2(100);
    vcnt NUMBER(3);
BEGIN
    SELECT m_nickname 
        INTO vnick
    FROM member
    WHERE m_code = pmcode;
    
    dbms_output.put_line(vnick);
    FOR cur IN(
        SELECT te.t_cate_nae nae, COUNT(*) OVER (PARTITION BY td.t_cate_id, te.t_cate_nae) cnt
        FROM t_detail td
        JOIN t_ev_cate te ON td.t_cate_id = te.t_cate_id
        WHERE td.t_cate_id like '%a%' and td.m_code = 1004 
        ORDER BY td.t_cate_id;
        )
    LOOP
        dbms_output.put_line(' ' || cur.nae ||' :' || cur.cnt);
    END LOOP;
END;
